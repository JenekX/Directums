<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABA
        DgAAAk1TRnQBSQFMAgEBAwEAAdABAAHQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEGIAAyMBNANHAYABWAJaAcABXQFeAV0B7QFdAV4BXQHtAVgCWgHAA0cBgAMj
        ATQUAAMBAQIDCQEMAxABFgMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAxEBFwMJAQwDAQEC
        VAADGQEjA0UBfQNfAdsDXwHzA18B8wNfAdsDRQF9AxkBIxwAA0ABcQErAbsBWwH/ARwBuAFXAf8BEgG3
        AVwB/wEMAbkBYgH/AQ4BvAGCAf8BFwG9AYIB/wEhAb4BgAH/AS4BvwFjAf8DQAFxEAADAwEEAxEBFwMe
        BCsBQwNGAYACVAFWAasCWQFbAcQCWQFbAcQCVAFWAasDRgGAAysBQwMfAS0DEgEYAwMBBFAAAzMBUwNh
        AeYDkgH/A8kB/wPYAf8D1wH/A8YB/wOLAf8DYQHmAzMBUxQAA0oBiwEeAbQBUAH/AQYBrwFIAf8BAwGy
        AVEB/wEGAbcBXAH/AQoBuwFkAf8BCwG9AYMB/wEMAb0BhAH/AQwBvQGEAf8BEgG9AYMB/wEmAb4BZQH/
        A0oBixQAAjABMQFNAlcBWQG/AlgBXwHjAkIBaQH1AisBrAH9AisBrAH9AkIBaQH1AlgBXwHjAlcBWQG/
        AjABMQFNVAADMwFTA2UB9AO2Af8D4gH/A8oB/wOyAf8DsAH/A8kB/wPgAf8DrwH/A2QB9AMzAVMMAANA
        AXEBHAGyAUwB/wEAAaYBOAH/AQABrAFEAf8BAwGyAVEB/wEEAasBVAH/AQYBqQFYAf8BCwG9AYMB/wEM
        Ab0BhAH/AQwBvQGEAf8BDAG9AYQB/wEOAb0BhAH/ASUBvgFkAf8DQAFxDAACMAExAU0CWgFcAc0CSAFi
        AfYCAAHRAf8CAAHRAf8CAAHRAf8CAAHRAf8CAAHRAf8CAAHRAf8CSAFiAfYCWgFcAc0CMAExAU1MAAMY
        ASIDZQHlA7sB/wPiAf8DrwH/A6wB/wOpAf8DqAH/A6cB/wOqAf8D4AH/A7EB/wNlAeUDGAEiBAADIwE0
        ASkBugFXAf8BAAGlATUB/wEAAaQBNQH/AQABqwFCAf8BAAGeAUMB/wFLAbUBkgH/AY0ByQGxAf8BBwGn
        AVoB/wEMAb0BhAH/AQwBvQGEAf8BDAG9AYQB/wEMAb0BhAH/AREBvAGBAf8BLgG+AWEB/wMjATQEAAMT
        ARoCVwFZAb8CSAFiAfYCAAHIAf8CAAHIAf8CAAHIAf8CAAHIAf8CAAHIAf8CAAHIAf8CAAHIAf8CAAHI
        Af8CSAFiAfYCVwFZAb8DEwEaSAADRgF+A58B/wPkAf8DswH/A68B/wO+Bf8DzAH/A6cB/wOnAf8DqgH/
        A+EB/wOPAf8DRgF+BAADRwGAARoBuAFPAf8BAAGvATwB/wEAAaoBOwH/AQABoQE6Af8BkAHIAawJ/wGY
        Ac8BuQH/AQgBrQFeAf8BCwG9AYMB/wELAb0BgwH/AQsBvAGCAf8BCgG7AWQB/wEfAbsBYAH/A0cBgAQA
        Aj4BPwFsAl0BYQHiAgABwQH/AgABvgH/AgABvgH/AgABvgH/AgABvgH/AgABvgH/AgABvgH/AgABvgH/
        AgABvgH/AgABvgH/AlgBXwHjAj4BPwFsSAADXwHbA9IB/wPRAf8DtAH/A8IN/wPJAf8DqAH/A6sB/wPJ
        Af8DyAH/A18B2wQAAVgCWgHAAR8BvAFUAf8BEAG6AU4B/wEKAbgBTgH/AS4BrQFhAf8B/gH/Af4N/wFb
        Ab4BoAH/AQgBswFfAf8BCgG7AWQB/wEJAbkBYgH/AQgBuAFfAf8BEQG3AVoB/wFYAloBwAQAAlEBUgGn
        AkIBaQH1AgABtAH/AgABqAH/AgABqAH/AgABqAH/AgABqAH/AgABqAH/AgABqAH/AgABqAH/AgABqAH/
        AgABtAH/AkIBZgH1AlEBUgGnSAADYgH2A+IB/wO+Af8DvxX/A8sB/wOrAf8DswH/A9wB/wNiAfYEAAFd
        AV4BXQHtATIBwwFjAf8BMQHEAWQB/wE3AcYBhQH/AfMB+gH2Af8B9QH8AfgB/wFfAdcBrQH/AbAB6AHP
        Bf8B/gH/Af4B/wEwAakBgAH/AQUBsgFZAf8BBgG1AVoB/wEEAbQBVgH/AQUBsgFPAf8BXQFeAV0B7QQA
        AlkBWwHEAkABqgH9AgwBtQH/A9AB/wPMAf8D0QH/A9wB/wPoAf8D7gH/A+4B/wPuAf8CAAGqAf8CMgGo
        Af0CWQFbAcRIAANiAfYD4wH/A8AB/wO3Af8D6QX/A7MB/wPuCf8DzwH/A7YB/wPdAf8DYgH2BAABXQFe
        AV0B7QFMAcwBjwH/AVEBzgGUAf8BVgHQAZkB/wGrAeQBxgH/AVQB0gGeAf8BRgHPAZkB/wEsAcgBjAH/
        AVQB1QGoAf8B+QH9AfsB/wH5AfwB+gH/ASABoQFVAf8BAQGwAU0B/wEAAa4BSgH/AQEBrAFGAf8BXQFe
        AV0B7QQAAlkBWwHEAkABqwH9AhkBuwH/A/gB/wPeAf8DzgH/A9EB/wPcAf8D6AH/A+4B/wPuAf8CAAGh
        Af8CNwGoAf0CWQFbAcRIAANfAdsD1wH/A9UB/wO6Af8DtgH/A7MB/wOzAf8DsgH/A+8J/wPPAf8DzQH/
        A18B2wQAAVgCWgHAAVoB0AGYAf8BhwHXAagB/wGNAdkBrQH/AZQB3AGzAf8BlQHdAbYB/wGOAdsBswH/
        AV0B1QGmAf8BQwHOAZgB/wEvAckBjQH/AeUB9wHuAf8B7gH3AfIB/wECAZUBOwH/AQABqAE+Af8BCAGs
        AUIB/wFYAloBwAQAAlEBUgGnAkgBawH1Ah0BvwH/Ah0BvwH/Ah0BvwH/AhgBugH/Ag0BsAH/AgIBpgH/
        AgABoAH/AgABnAH/AgABnAH/AgABoAH/AkIBZwH1AlEBUgGnSAADRgF+A6wB/wPpAf8DvQH/A7kB/wO3
        Af8DtQH/A7QB/wO0Af8D7QH/A7wB/wPmAf8DmQH/A0YBfgQAA0cBgAFXAc0BlQH/AZoB3QG1Af8BowHg
        AbwB/wGqAeMBwgH/Aa4B5QHGAf8BqwHkAcQB/wGYAd4BuQH/AYAB1wGpAf8BQgHMAZMB/wEeAcIBYQH/
        Aa0B5gHJAf8BxwHqAdcB/wEAAaIBMgH/ARYBrwFHAf8DRwGABAACPgE/AWwCWAFfAeMCLwHRAf8CKAHK
        Af8CKAHKAf8CKAHKAf8CKAHKAf8CKAHKAf8CKAHKAf8CKAHKAf8CKAHKAf8CLQHPAf8CWAFfAeMCPgE/
        AWxIAAMYASIDZQHlA8cB/wPoAf8DvQH/A7sB/wO5Af8DuQH/A7kB/wO7Af8D5gH/A74B/wNlAeUDGAEi
        BAADIwE0AUcBxgGIAf8BmwHdAbYB/wGwAeUBxQH/AbcB5wHKAf8BuQHoAcwB/wG0AecBygH/AaYB4gHA
        Af8BjwHbAbAB/wFUAdEBmgH/ATMBxgGEAf8BFwG9AVcB/wEPAboBUAH/AQABrgE9Af8BKQG5AVYB/wMj
        ATQEAAMTARoCVwFZAb8CVgFrAfYCNwHZAf8CNQHXAf8CNQHXAf8CNQHXAf8CNQHXAf8CNQHXAf8CNQHX
        Af8CNgHYAf8CSQFoAfYCVwFZAb8DEwEaTAADMwFTA2UB9APHAf8D6QH/A9YB/wPDAf8DwwH/A9YB/wPo
        Af8DwQH/A2UB9AMzAVMMAANAAXEBXgHOAZkB/wG0AeUByAH/AbwB6QHOAf8BvQHpAc8B/wG4AecBzAH/
        AasB4wHCAf8BlgHcAbMB/wFfAdMBnwH/AUIByQGKAf8BKAHBAV4B/wEUAboBTwH/ASABugFTAf8DQAFx
        DAACMAExAU0CWgFcAc0CWwFrAfYCRQHnAf8CQQHjAf8CQQHjAf8CQQHjAf8CQQHjAf8CRQHnAf8CWAFr
        AfYCWgFcAc0CMAExAU1UAAMzAVMDYQHmA64B/wPXAf8D4QH/A+EB/wPWAf8DpQH/A2EB5gMzAVMUAANK
        AYsBYgHQAZ0B/wGvAeMBxAH/Ab4B6QHPAf8BuAHnAcsB/wGsAeMBwgH/AZkB3QG1Af8BgQHVAaMB/wFP
        Ac0BkgH/ATkBxQGAAf8BLwG/AV0B/wNKAYsUAAIwATEBTQJXAVkBvwJYAV8B4wJZAW0B9QJGAbYB/QJF
        AbYB/QJZAW0B9QJYAV8B4wJXAVkBvwIwATEBTVwAAxkBIwNFAX0DXwHbA18B8wNfAfMDXwHbA0UBfQMZ
        ASMcAANAAXEBTQHIAYwB/wGHAdQBpQH/AZ0B3QG2Af8BpQHgAbwB/wGXAdwBsgH/AWEB0QGdAf8BSQHI
        AYoB/wE6AcEBZAH/A0ABcRwAAxMBGgI+AT8BbAJSAVQBpgJZAVsBxAJZAVsBxAJSAVQBpgI+AT8BbAMT
        ARqgAAMjATQDRwGAAVgCWgHAAV0BXgFdAe0BXQFeAV0B7QFYAloBwANHAYADIwE0kAABQgFNAT4HAAE+
        AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAv8B8AEPAYABAQIAAfABDwHgAQcBgAEBAgAB4AEH
        AcABAwHgAQcCAAHAAQMBgAEBAcABAwIAAYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIA
        AYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIAAYABAQIA
        AcABAwGAAQEBwAEDAgAB4AEHAcABAwHgAQcCAAHwAQ8B4AEHAfABDwIAAv8B8AEPAv8CAAs=
</value>
  </data>
</root>